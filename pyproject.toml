[tool.black]
line-length = 79

[tool.ruff]
line-length = 120
select = ["ALL"]
ignore = [
    "D404",  # First word of the docstring should not be "This"
    # I would like to have it, but there are a few annoying exceptions:
    "D401", # First line of docstring should be in imperative mood - false positives
    "ERA001",
    "UP031",
    "D205",  # 1 blank line required between summary line and description
    "D400",  # First line should end with a period
    "D415",  # First line should end with a period
    # Introduces bugs
    "RUF001", "RUF002", "RUF005",
    "ARG",
    "DTZ001", # The use of `datetime.datetime()` without `tzinfo` is necessary
    # Personal preference
    "D406", # Section name should end with a newline ("Returns")
    "D212",  # I want multiline-docstrings to start at the second line
    "D407",  # google-style docstrings don't have dashses
    "N806",  # Variable `NO` in function should be lowercase
    "N814", # Camelcase `PageAttributes` imported as constant `PG`
    "N817",  # CamelCase `PagesAttributes` imported as acronym `PA`
    "ANN101",  # annotating 'self' seems weird (at least before 3.11)
    "ANN102",  # Missing type annotation for `cls` in classmethod
    "ANN204", # Missing return type annotation for special method `__init__`
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "BLE",  # we want to capture Exception sometimes
    "COM812",  # yes, they make the diff smaller
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in `__init__`
    "D203", # one-blank-line-before-class
    "EM",  # exception messages
    "G004",  # f-string in logging statement
    "RET",
    "S110", # `try`-`except`-`pass` detected, consider logging the exception
    "SIM105",  # contextlib.suppress
    "SIM108",  # don't enforce ternary operators
    "SIM300",  # yoda conditions
    "TID252",  # we want relative imports
    "TRY", # I don't know what this is about
    # As long as we are not on Python 3.9+
    "UP035", # PEP 585
    # As long as we are not on Python 3.10+
    "UP038",  # Use `X | Y` in `isinstance` call instead of `(X, Y)` - PEP 604
    # As long as we are not on Python 3.11+
    "UP006", "UP007",
    # for the moment, fix it later:
    "T201",  # print
    "DTZ006",  # datetime without timezone
    "SIM115",  # context handler for opening files
    "A",  # Variable is shadowing a built-in
    "B904", # Within an `except` clause, raise exceptions with
    "B905",  # `zip()` without an explicit `strict=` parameter
    "C901",
    "D101",  # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D417",  # Missing argument descriptions in the docstring
    "FBT001", # Boolean positional arg in function definition
    "FBT002", # Boolean default value in function definition
    "FBT003", # Boolean positional value in function call
    "PGH", # Use specific error messages
    "PLE",  # too many arguments for logging
    "PLR0911",  # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913",  # Too many arguments to function call
    "PLR0915", # Too many statements
    "PLR2004", # Magic value
    "PLW",  # global variables
    "PT011", # `pytest.raises(ValueError)` is too broad, set the `match`
    "PT012",  # `pytest.raises()` block should contain a single simple statement
    "PTH123", # `open()` should be replaced by `Path.open()`
    "S101",  # Use of `assert` detected
    "SLF001",  # Private member accessed
]
